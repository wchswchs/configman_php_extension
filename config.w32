ARG_ENABLE("configman", "enable configman", "no");

if (PHP_CONFIGMAN != "no") {
  EXTENSION("configman", "configman.c", null, "-I"+configure_module_dirname);
  ADD_SOURCES(configure_module_dirname + "/kernel", "main.c memory.c exception.c hash.c debug.c backtrace.c object.c array.c string.c fcall.c require.c file.c operators.c math.c concat.c variables.c filter.c iterator.c exit.c time.c", "configman");
  ADD_SOURCES(configure_module_dirname + "/kernel/extended", "array.c fcall.c", "configman");
  /* PCRE is always included on WIN32 */
  AC_DEFINE("ZEPHIR_USE_PHP_PCRE", 1, "Whether PHP pcre extension is present at compile time");
  if (PHP_JSON != "no") {
    ADD_EXTENSION_DEP("configman", "json");
    AC_DEFINE("ZEPHIR_USE_PHP_JSON", 1, "Whether PHP json extension is present at compile time");
  }
  
  ADD_SOURCES(configure_module_dirname + "/configman", "baseserviceconfig.zep.c", "configman");
	ADD_SOURCES(configure_module_dirname + "/configman/service", "serviceconfig.zep.c", "configman");
	ADD_SOURCES(configure_module_dirname + "/configman/service/memcache", "memcacheconfig.zep.c", "configman");
	ADD_SOURCES(configure_module_dirname + "/configman/service/mysql", "mysqlconfig.zep.c", "configman");
	ADD_SOURCES(configure_module_dirname + "/configman/service/rabbitmq", "rabbitmqconfig.zep.c", "configman");
	ADD_SOURCES(configure_module_dirname + "/configman/service/redis", "redisconfig.zep.c", "configman");
  ADD_FLAG("CFLAGS_CONFIGMAN", "/D ZEPHIR_RELEASE");
}
